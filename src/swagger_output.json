{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Desafio Luiza code - Squad C: ENIAC girls",
    "description": "Projeto desenvolvido para o desafio final do Luiza code 3"
  },
  "host": "localhost:3001",
  "basePath": "/",
  "tags": [
    {
      "name": "Usuario",
      "description": "Endpoints relacionados ao recurso de usuario"
    },
    {
      "name": "Loja",
      "description": "Endpoints relacionados ao recurso de loja"
    },
    {
      "name": "Produto",
      "description": "Endpoints relacionados ao recurso de produto"
    },
    {
      "name": "Cliente",
      "description": "Endpoints relacionados ao recurso de cliente"
    },
    {
      "name": "Compra",
      "description": "Endpoints relacionados ao recurso de compra"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "apiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "authorization",
      "description": "Insira seu token para garantir acesso aos endpoints"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/lojas/": {
      "get": {
        "tags": [
          "Loja"
        ],
        "description": "Endpoint para obter uma lista de lojas",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lojas encontradas",
            "schema": {
              "$ref": "#/definitions/Loja"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/produtos/": {
      "get": {
        "tags": [
          "Produto"
        ],
        "description": "Endpoint parra obter uma lista de produtos",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Produto encontrado",
            "schema": {
              "$ref": "#/definitions/Produto"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/clientes/": {
      "get": {
        "tags": [
          "Cliente"
        ],
        "description": "Endpoint para obter uma lista de clientes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Clientes encontrados",
            "schema": {
              "$ref": "#/definitions/Cliente"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Cliente"
        ],
        "description": "Endpoint para cadastrar um cliente",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "nome": {
                  "example": "any"
                },
                "cpf": {
                  "example": "any"
                },
                "endereco": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Cliente cadastrado",
            "schema": {
              "$ref": "#/definitions/Cliente"
            }
          },
          "400": {
            "description": "Desculpe, tivemos um problema com a requisição"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/compras/{id}": {
      "get": {
        "tags": [
          "Compra"
        ],
        "description": "Endpoint para obter uma lista de compras à partir do id de um Cliente",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Compras encontradas",
            "schema": {
              "$ref": "#/definitions/Compras"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/compras/": {
      "post": {
        "tags": [
          "Compra"
        ],
        "description": "Endpoint para incluir uma nova compra",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "ProdutoId": {
                  "example": "any"
                },
                "ClienteId": {
                  "example": "any"
                },
                "valor_total": {
                  "example": "any"
                },
                "pagamento": {
                  "example": "any"
                },
                "LojaId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Compras"
            },
            "description": "Compra encontrada"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Desculpe, tivemos um problema com a requisição"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Compra não encontrada"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/compras/{cli}/{prod}": {
      "delete": {
        "tags": [
          "Compra"
        ],
        "description": "Endpoint para excluir um produto da compra",
        "parameters": [
          {
            "name": "cli",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "prod",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Compra encontrada",
            "schema": {
              "$ref": "#/definitions/Compras"
            }
          },
          "400": {
            "description": "Desculpe, tivemos um problema com a requisição"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Compra não encontrada"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/compras/finalizar": {
      "put": {
        "tags": [
          "Compra"
        ],
        "description": "Endpoint para atualizar o status da compra para REALIZADA",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "idCompra": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Compra encontrada",
            "schema": {
              "$ref": "#/definitions/Compras"
            }
          },
          "400": {
            "description": "Desculpe, tivemos um problema com a requisição"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Compra não encontrada"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/compras/retirar": {
      "put": {
        "tags": [
          "Compra"
        ],
        "description": "Endpoint para atualizar o status da compra para RETIRADO",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "idCompra": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Compra encontrada",
            "schema": {
              "$ref": "#/definitions/Compras"
            }
          },
          "400": {
            "description": "Desculpe, tivemos um problema com a requisição"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Compra não encontrada"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/usuarios/": {
      "get": {
        "tags": [
          "Usuario"
        ],
        "description": "Endpoint para obter uma lista de usuários",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Usuarios encontrados",
            "schema": {
              "$ref": "#/definitions/Usuario"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Usuario"
        ],
        "description": "Endpoint para cadastrar um novo usuário",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "nome": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "senha": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Usuario cadastrado",
            "schema": {
              "$ref": "#/definitions/Usuario"
            }
          },
          "400": {
            "description": "Desculpe, tivemos um problema com a requisição"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/usuarios/login": {
      "post": {
        "tags": [
          "Usuario"
        ],
        "description": "Endpoint para gerar um token de usuário",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "senha": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuario encontrado",
            "schema": {
              "$ref": "#/definitions/Usuario"
            }
          },
          "400": {
            "description": "Erro ao gerar token"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Email não cadastrado"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    }
  },
  "definitions": {
    "Usuario": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "nome": {
          "type": "string",
          "example": "Nathaly"
        },
        "email": {
          "type": "string",
          "example": "nathalykaubatz@gmail.com"
        },
        "senha": {
          "type": "string",
          "example": "123"
        },
        "createdAt": {
          "type": "string",
          "example": "2021-09-14T19:46:57.326Z"
        },
        "updatedAt": {
          "type": "string",
          "example": "2021-09-14T19:46:57.326Z"
        }
      }
    },
    "NovoUsuario": {
      "type": "object",
      "properties": {
        "nome": {
          "type": "string",
          "example": "Leticia Nunes"
        },
        "email": {
          "type": "string",
          "example": "leticianunes@gmail.com"
        },
        "senha": {
          "type": "string",
          "example": "123"
        }
      }
    },
    "Loja": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "cnpj": {
          "type": "string",
          "example": "00111222000133"
        },
        "nome": {
          "type": "string",
          "example": "Loja Matriz"
        },
        "endereco": {
          "type": "string",
          "example": "Rua Voluntários da Franca, 1000, Centro - Franca/SP"
        },
        "createdAt": {
          "type": "string",
          "example": "2021-09-14T03:00:00.000Z"
        },
        "updatedAt": {
          "type": "string",
          "example": "2021-09-14T03:00:00.000Z"
        }
      }
    },
    "Produto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "nome": {
          "type": "string",
          "example": "Notebook Aspire 3"
        },
        "marca": {
          "type": "string",
          "example": "Acer"
        },
        "categoria": {
          "type": "string",
          "example": "Informática"
        },
        "preco": {
          "type": "number",
          "example": 5000
        }
      }
    },
    "Cliente": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 2
        },
        "nome": {
          "type": "string",
          "example": "Celiane Brasil"
        },
        "cpf": {
          "type": "string",
          "example": "12312312344"
        },
        "endereco": {
          "type": "string",
          "example": "Ruuuuuuuua, 1 - Brasil"
        },
        "email": {
          "type": "string",
          "example": "celiane@celiane.com"
        },
        "createdAt": {
          "type": "string",
          "example": "2021-09-14T20:34:33.574Z"
        },
        "updatedAt": {
          "type": "string",
          "example": "2021-09-14T20:34:33.574Z"
        }
      }
    },
    "NovoCliente": {
      "type": "object",
      "properties": {
        "nome": {
          "type": "string",
          "example": "Celiane Brasil"
        },
        "cpf": {
          "type": "string",
          "example": "12312312344"
        },
        "endereco": {
          "type": "string",
          "example": "Ruuuuuuuua, 1 - Brasil"
        },
        "email": {
          "type": "string",
          "example": "celiane@celiane.com"
        }
      },
      "required": [
        "nome",
        "cpf",
        "endereco",
        "email"
      ]
    },
    "Compra": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "data": {
          "type": "string",
          "example": "2021-09-14T19:47:39.867Z"
        },
        "valorTotal": {
          "type": "number",
          "example": 0
        },
        "pagamento": {
          "type": "string",
          "example": "DINHEIRO"
        },
        "status": {
          "type": "string",
          "example": "RETIRADO"
        },
        "createdAt": {
          "type": "string",
          "example": "2021-09-14T19:47:39.868Z"
        },
        "updatedAt": {
          "type": "string",
          "example": "2021-09-14T20:16:28.487Z"
        },
        "LojaId": {
          "type": "number",
          "example": 1
        },
        "ClienteId": {
          "type": "number",
          "example": 1
        }
      }
    },
    "NovaCompra": {
      "type": "object",
      "properties": {
        "valorTotal": {
          "type": "number",
          "example": 0
        },
        "pagamento": {
          "type": "string",
          "example": "DINHEIRO"
        },
        "LojaId": {
          "type": "number",
          "example": 1
        },
        "ClienteId": {
          "type": "number",
          "example": 1
        },
        "ProdutoId": {
          "type": "number",
          "example": 1
        }
      },
      "required": [
        "valorTotal",
        "pagamento",
        "LojaId",
        "ClienteId",
        "ProdutoId"
      ]
    }
  }
}